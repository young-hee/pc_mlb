/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.8
 * Generated at: 2020-02-27 02:37:54 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.helpdesk.include;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class notice_pop_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<style>\n");
      out.write(".noticePOP {background: rgba(0,0,0, 0.5);}\n");
      out.write(".noticePOP .webview-layer-fixchk {position:absolute; bottom:0; left:0; width:100%; height:40px; padding-left:0; z-index:3; }\n");
      out.write(".noticePOP .webview-layer-fixchk .check-skin {margin-top:10px; letter-spacing:-0.05em;}\n");
      out.write(".noticePOP .webview-layer-fixchk .check-skin > span {float:left;}\n");
      out.write(".noticePOP .webview-layer-fixchk .check-skin > em {display:inline-block; color:#fff; float:left; font-weight:400; margin-left:10px; height:20px; line-height:20px;}\n");
      out.write(".noticePOP .layer-popup-cont .layer-popup-close button {height:40px; width:40px; background:url(../images/showing/popClose_btn.png) no-repeat calc(100% - 10px) 10px; background-size:16px 16px;}\n");
      out.write(".noticePOP .layer-popup-cont .layer-popup-box-cnt {padding:0;}\n");
      out.write(".noticePOP .layer-popup-cont .layer-popup-box {margin-bottom:40px; touch-action:auto !important; overflow-y:auto;}\n");
      out.write(".noticePOP .layer-popup-cont {width:auto; min-width:100px; min-height:150px; max-width:calc(100% - 40px); background:transparent;}\n");
      out.write(".noticePOP .layer-popup-box-cnt img {margin-bottom:5px;}\n");
      out.write(".noticePOP .layer-popup-box-cnt *:not(img) {word-break:break-all; padding-bottom:5px;}\n");
      out.write(".noticePOP .layer-popup-box-cnt {display:flex; flex-direction:column; color:#fff; word-break: break-all;}\n");
      out.write(".layer-popup{display:inline-block;}\n");
      out.write("/* .layer-popup + .layer-popup{margin-left:10px;} */\n");
      out.write(".layer-popup.on .tooltip-layer{display:block;}\n");
      out.write(".layer-popup{display:none;position:fixed;z-index:1000;top:0;/*right:0;bottom:0;*/ font-size:0px; left:0;width: 100%;height: 100%;background:rgba(0,0,0, 0.8); text-align:center;}\n");
      out.write(".layer-popup:after{ content:\"\"; display:inline-block; height:100%; vertical-align:middle; width:0; }\n");
      out.write(".layer-popup-cont{ display:inline-block; vertical-align:middle; background-color:#ffffff; text-align:left; width:calc(100% - 20px); position:relative;}\n");
      out.write("\n");
      out.write("/*.layer-popup-cont{position:absolute;top:50%;right:10px;left:10px;border:1px solid #000;background:#fff;transform:translateY(-50%);}*/\n");
      out.write("\n");
      out.write("\n");
      out.write(".layer-popup-cont .layer-popup-title{display:block;height:70px;}\n");
      out.write(".layer-popup-cont .layer-popup-title span{display:block;padding:0 50px 0 20px;border-bottom:1px solid #eee;background:#fff;font-size:17px;font-weight:bold;line-height:70px;text-align:left;}\n");
      out.write(".layer-popup.layer-type02 .layer-popup-cont .layer-popup-title span{background:#f8f8f8;}\n");
      out.write(".layer-popup-cont .layer-popup-box{ overflow:hidden; }\n");
      out.write(".layer-popup-cont .layer-popup-box-cnt{padding:20px 20px 20px 20px;}\n");
      out.write(".layer-popup-cont .layer-popup-box-cnt01{padding:0 20px;}\n");
      out.write(".layer-popup-cont .layer-popup-box-cnt02{padding:30px 20px;}\n");
      out.write(".layer-popup-cont .layer-popup-box-cnt01 .filter-search{padding: 0;}\n");
      out.write(".layer-popup-cont .layer-popup-box-cnt02 .text-list01,\n");
      out.write(".layer-popup-cont .layer-popup-box-cnt02 .btn-wrap01{padding:0;}\n");
      out.write(".layer-popup-cont .layer-popup-box-cnt02 .btn-wrap01{margin-top:30px;}\n");
      out.write(".layer-popup-cont img{ max-width:100%; }\n");
      out.write(".layer-popup-cont .btn-wrap01 a,\n");
      out.write(".webview-layer-wrap .btn-wrap01 a{width:175px!important;}\n");
      out.write(".layer-popup-cont .btn-wrap01 span a,\n");
      out.write(".webview-layer-wrap .btn-wrap01 span a,\n");
      out.write(".layer-popup-cont .btn-wrap01 span button,\n");
      out.write(".webview-layer-wrap .btn-wrap01 span button{width:calc(50% - 2px)!important;}\n");
      out.write(".layer-popup-cont .layer-popup-close{position:absolute;top:0;right:0;}\n");
      out.write(".layer-popup-cont .layer-popup-close button{width:50px;height:70px;background:url(../images/cm/popClose_btn.png) no-repeat 19px 50%;background-size:16px 16px;font-size:0;line-height:0;}\n");
      out.write(".layer-popup-cont .layer-popup-close.layer-popup-close02{position:absolute;top:0;right:0;}\n");
      out.write(".layer-popup-cont .layer-popup-close.layer-popup-close02 button{height:110px;}\n");
      out.write(".layer-popup-cont .tooltip-footer-info {margin-top: 10px;padding:15px 8px;background:#f8f8f8;font-size:14px;text-align:center;}\n");
      out.write(".layer-popup-cont .tooltip-footer-info strong{font-weight:bold;}\n");
      out.write(".layer-popup-cont .layer-popup-box .layer-txt {font-size: 12px;color: #999;line-height: 19px;text-align: center;}\n");
      out.write(".layer-popup-cont .layer-popup-box .layer-txt strong {font-weight: bold;color: #000;}\n");
      out.write(".layer-popup-cont .layer-popup-box .layer-txt+.layer-txt {margin-top: 7px;}\n");
      out.write(".layer-popup-cont .layer-popup-box-cnt02 .layer-popup-footer {margin: 30px -20px -30px;padding:15px 8px;background:#f8f8f8;text-align:center;}\n");
      out.write(".layer-popup-cont .layer-popup-box-cnt02 .layer-popup-footer p{font-size: 12px;}\n");
      out.write(".layer-popup-cont .layer-popup-box-cnt02 .layer-popup-footer strong{font-weight:bold;}\n");
      out.write(".layer-popup.layer-type02 .layer-popup-cont{position:fixed;top:initial;right:initial;bottom:0;left:0;width: 100%;/*max-height: calc(100% - 60px);*/border-width:1px 0 0 0;transform:translateY(0);}\n");
      out.write(".layer-popup.layer-type02 .layer-popup-box {overflow:hidden;}\n");
      out.write("\n");
      out.write(".layer-popup.layer-type03 .layer-popup-cont{position:fixed;top:0;right:initial;bottom:initial;left:0;width: 100%;border-width:0;transform:translateY(0);}\n");
      out.write(".layer-popup.layer-type04 .layer-popup-cont{top:0;right:0;bottom:0;left:0;width:100%;height:100%;border-width:0;transform:translateY(0);}\n");
      out.write(".layer-popup.layer-type04 .layer-popup-cont .layer-popup-title {width: 100%;height: 110px;}\n");
      out.write(".layer-popup.layer-type04 .layer-popup-cont .layer-popup-title span {display: block;overflow: hidden;position: static;left: 0;top: 0;width: 100%;height: 110px;padding: 0 50px;border-bottom:none;background-color: #fff;font-size:20px;line-height:110px;text-align: center;z-index: 2;text-overflow:ellipsis;white-space:nowrap;word-wrap:normal;}\n");
      out.write(".layer-popup.layer-type04 .layer-popup-cont .layer-popup-close{top:46px;}\n");
      out.write(".layer-popup.layer-type04 .layer-popup-cont .layer-popup-box-cnt01{padding:0;}\n");
      out.write("\n");
      out.write(".layer-popup.layer-type05 .layer-popup-cont {display: flex;align-items: center;justify-content: center;position: static;width: 100%;height: 100%;background: #000;transform: translateY(0);}\n");
      out.write(".layer-popup.layer-type05 .layer-popup-cont .layer-popup-close button { background: url(../images/cm/btn_clos_02.png) no-repeat 50% 50%; background-size: 16px 16px;}\n");
      out.write("\n");
      out.write("\n");
      out.write(".layer-popup.type-bottom .layer-popup-cont .layer-popup-title span{background:#f8f8f8;}\n");
      out.write(".layer-popup.type-bottom .layer-popup-cont{position:fixed;top:initial;right:initial;bottom:0;left:0;width: 100%;/*max-height: calc(100% - 60px);*/border-width:1px 0 0 0;transform:translateY(0);}\n");
      out.write(".layer-popup.type-bottom .layer-popup-box {overflow:hidden;}\n");
      out.write(".layer-popup-video video {width: 100%;}\n");
      out.write("\n");
      out.write("\n");
      out.write(".layer-popup-cont.layer-popup-cont-btn {}\n");
      out.write(".layer-popup-cont.layer-popup-cont-btn .layer-popup-box {overflow:hidden;max-height:480px;}\n");
      out.write(".layer-popup-cont.layer-popup-cont-btn .layer-popup-box .layer-popup-box-cnt01 {padding-bottom: 60px;}\n");
      out.write(".layer-popup-cont .layer-popup-txt-info01{font-size:12px;line-height:18px;text-align:center;}\n");
      out.write("\n");
      out.write(".layer-popup-cont{\n");
      out.write("\tposition:absolute;\n");
      out.write("\ttop:50%;\n");
      out.write("\tright:10px;\n");
      out.write("\tleft:21px;\n");
      out.write("\tborder:1px solid #000;\n");
      out.write("\tbackground:#fff;\n");
      out.write("\ttransform:translateY(-50%);\n");
      out.write("}\n");
      out.write("</style>\n");
      out.write("<script id=\"noticePopupTemplate\" type=\"text/x-jsrender\">\n");
      out.write("\t<div id=\"noticePOP-{{:notiSn}}\" class=\"layer-popup noticePOP\">\n");
      out.write("\t\t<div class=\"layer-popup-cont\">                 \n");
      out.write("\t\t\t<div class=\"layer-popup-box d_layer_scroll\">\n");
      out.write("\t\t\t\t<div class=\"layer-popup-box-scroll\">\n");
      out.write("\t\t\t\t\t<div class=\"layer-popup-box-cnt\">\n");
      out.write("\n");
      out.write("                    <!-- 내용 S -->\n");
      out.write("\t\t\t\t\t{{if notiContUseSectCd == 'PC_MOBILE_UNITY_USE'}}\n");
      out.write("\t\t\t\t\t\t{{:pcNotiCont}}\n");
      out.write("\t\t\t\t\t{{else}}\n");
      out.write("\t\t\t\t\t\t{{:mobileNotiCont}}\n");
      out.write("\t\t\t\t\t{{/if}}\n");
      out.write("\t\t\t\t\t<!--// 내용 E -->\n");
      out.write("\n");
      out.write("\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t</div>\n");
      out.write("\t\t\t</div>\n");
      out.write("\t\t\t<div class=\"layer-popup-close\">\n");
      out.write("\t\t\t\t<button type=\"button\" class=\"d_layer_close\">닫기</button>\n");
      out.write("\t\t\t</div>\n");
      out.write("\t\t\t<div class=\"webview-layer-fixchk\">\n");
      out.write("\t\t\t\t<label class=\"check-skin\">\n");
      out.write("\t\t\t\t\t<input type=\"checkbox\" id=\"\" data-noti-sn=\"{{:notiSn}}\" />\n");
      out.write("\t\t\t\t\t<span></span>\n");
      out.write("\t\t\t\t\t<em>오늘은 그만보기</em>\n");
      out.write("\t\t\t\t</label>\n");
      out.write("\t\t\t</div>\n");
      out.write("\t\t</div>\n");
      out.write("\t</div>\n");
      out.write("</script>\n");
      out.write("\n");
      out.write("<script type=\"text/javascript\">\n");
      out.write("$().ready(function() {\n");
      out.write("\t$.ajax('/helpdesk/notice/popupList.ajax', {\n");
      out.write("    \t\ttype: 'get',\n");
      out.write("    \t\tdata: {\n");
      out.write("    \t\t\tsearchExpsrScrinSectCd: '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${param.searchExpsrScrinSectCd}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("' || 'MAIN'\n");
      out.write("    \t\t},\n");
      out.write("    \t})\n");
      out.write("    \t.done(function(rt) {\n");
      out.write("    \t\t$(rt.noticeList).each(function() {\n");
      out.write("    \t\t\tif (getCookie('notice_popup_' + this.notiSn)) {\n");
      out.write("    \t\t\t\treturn;\n");
      out.write("    \t\t\t}\n");
      out.write("    \t\t\tif(this.mobileNotiCont != null){\n");
      out.write("\t    \t\t\t$('body').append($('#noticePopupTemplate').render(this));\n");
      out.write("\t    \t\t\tlayerPopup.webviewOpenNow('#noticePOP-' + this.notiSn);\n");
      out.write("\t    \t\t\tsetTimeout($.proxy(function() {\n");
      out.write("\t    \t\t\t\t$('#noticePOP-' + this.notiSn + \" .layer-popup-box\")\n");
      out.write("\t    \t\t\t\t\t.width($('#noticePOP-' + this.notiSn + \" .layer-popup-box-cnt img\").width());\n");
      out.write("\t    \t\t\t}, this), 1000);\n");
      out.write("    \t\t\t}\n");
      out.write("    \t\t});\n");
      out.write("    \t})\n");
      out.write("    \t.fail(function(e) {\n");
      out.write("    \t\twindow.console && console.log(e);\n");
      out.write("    \t});\n");
      out.write("\n");
      out.write("\t$('body').on('change', '[data-noti-sn]', function() {\n");
      out.write("\t\tif (this.checked) {\n");
      out.write("\t\t\tsetCookie('notice_popup_' + $(this).data('notiSn'), true, 1);\n");
      out.write("\t\t\t$(this).closest('.layer-popup')\n");
      out.write("\t\t\t\t.find('.d_layer_close').click();\n");
      out.write("\t\t}\n");
      out.write("\t});\n");
      out.write("});\n");
      out.write("</script>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
