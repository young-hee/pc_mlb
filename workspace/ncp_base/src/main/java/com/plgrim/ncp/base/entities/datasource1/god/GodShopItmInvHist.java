/**
 * @author : Generator(Generator)
 * @date : 2018-05-23
 * @version : 1.0
 * @desc :  generated by gradle
 */

package com.plgrim.ncp.base.entities.datasource1.god;

import lombok.Data;
import lombok.EqualsAndHashCode;

import org.apache.ibatis.type.Alias;

import com.plgrim.ncp.base.abstracts.AbstractEntity;

/**
 * 상품 매장 단품 재고 이력
 */
@Data
@EqualsAndHashCode(callSuper=false)
@Alias("godShopItmInvHist")
public class GodShopItmInvHist extends AbstractEntity {
	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;

	/**
	 * 단품 번호	 
	 */
	private String itmNo;


	/**
	 * 매장 ID	 
	 */
	private String shopId;


	/**
	 * 이력 일시	 
	 */
	private java.util.Date histDt;


	/**
	 * 상품 번호	 
	 */
	private String godNo;


	/**
	 * 재고 수량	 
	 */
	private java.lang.Long invQty;


	/**
	 * 판매 예정 수량
	 * ㅁ. 재고 수는 30분에 한번씩 연동 되기 때문에 ERP에 예약 영수증을 보내기전에까지는 판매 예정 재고에서 재고를 차감 해야 한다.
	 * ERP에 예약 영수증을 보낸 후 재고 수와 판매 예정 수는  보낸 량 만큼 차감
	 * 
	 * ㅁ. 실재고 계산 방법
	 *    >. 총 가용 재고 수량 - 판매 예정 수 - IF(안전 재고 사용여부=Y,안전 재고 수,0)	 
	 */
	private java.lang.Long salePrearngeQty;


	/**
	 * 안전 재고 율 사용 여부
	 * ㅁ. Y인 경우 시스템 매장 브랜드.안전 재고 율(안전재고 수량으로 사용 되고 있음)에 셋팅된 수량을 사용	 
	 */
	private String safeInvRtUseYn;


	/**
	 * 안전 재고 수량	 
	 */
	private java.lang.Long safeInvQty;


	/**
	 * 웹 판매 가능 여부	 
	 */
	private String webSalePsbYn;


	/**
	 * 위치1 재고 수량
	 * ㅁ. FC01	 
	 */
	private java.lang.Long lc1InvQty;


	/**
	 * 위치2 재고 수량
	 * ㅁ. FC08	 
	 */
	private java.lang.Long lc2InvQty;


	/**
	 * 변경 사유 내용	 
	 */
	private String modResnCont;


	/**
	 * 변경 사유 상세 내용	 
	 */
	private String modResnDetailCont;


	/**
	 * 등록자 ID
	 * 등록한 관리자 번호	 
	 */
	private String regtrId;


	/**
	 * 등록 일시	 
	 */
	private java.util.Date regDt;


	/**
	 * 수정자 ID
	 * 수정한 관리자 번호	 
	 */
	private String udterId;


	/**
	 * 수정 일시	 
	 */
	private java.util.Date udtDt;

	
}
