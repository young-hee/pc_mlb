/**
 * @author : Generator(Generator)
 * @date : 2018-05-23
 * @version : 1.0
 * @desc :  generated by gradle
 */

package com.plgrim.ncp.base.entities.datasource1.dsp;

import lombok.Data;
import lombok.EqualsAndHashCode;

import org.apache.ibatis.type.Alias;

import com.plgrim.ncp.base.abstracts.AbstractEntity;

/**
 * 전시 S-TREND
 */
@Data
@EqualsAndHashCode(callSuper=false)
@Alias("dspStrnd")
public class DspStrnd extends AbstractEntity {
	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;

	/**
	 * S-TREND 일련번호	 
	 */
	private java.lang.Long strndSn;


	/**
	 * S-TREND 유형 코드
	 * ㅁ. S-TREND 유형 : STRND_TP
	 *    >. 코디 : CODI
	 *    >. 룩북 : LKBUK
	 *    >. 무비 : MOV
	 *    >. 매거진 : MGZ
	 *    >. GET THE STYLE : GTS	 
	 */
	private String strndTpCd;


	/**
	 * S-TREND 명	 
	 */
	private String strndNm;


	/**
	 * S-TREND 설명
	 * ㅁ. S-TREND에 대한 간략한 설명	 
	 */
	private String strndDscr;


	/**
	 * 전시 시작 일시
	 * 전시시작일시(YYYYMMDDHH24MISS)	 
	 */
	private java.util.Date dspBegDt;


	/**
	 * 전시 종료 일시
	 * 전시종료일시(YYYYMMDDHH24MISS)	 
	 */
	private java.util.Date dspEndDt;


	/**
	 * 전시 여부
	 * 전시여부	 
	 */
	private String dspYn;


	/**
	 * 정렬 순서
	 * 우선 순위	 
	 */
	private java.lang.Integer sortSeq;


	/**
	 * 브랜드 ID
	 * ㅁ. 온라인에서 사용하는 브랜드 ID	 
	 */
	private String brndId;


	/**
	 * 시즌 코드
	 * ㅁ. 시즌 : SESON
	 *    >. 2012 S/S : 2012SS
	 *    >. 2012 F/W : 2012FW
	 *    >. 2012 ALL : 2012ASS
	 *    >. 2013 S/S : 2013SS
	 *    >. 2013 F/W : 2013FW
	 *    >. 2013 ALL : 2013ASS
	 *    >. 2014 S/S : 2014SS
	 *    >. 2014 F/W : 2014FW
	 *    >. 2014 ALL : 2014ASS
	 *    >. 2015 S/S : 2015SS
	 *    >. 2015 F/W : 2015FW
	 *    >. 2015 ALL : 2015ASS
	 *    >. 2016 S/S : 2016SS
	 *    >. 2016 F/W : 2016FW
	 *    >. 2016 ALL : 2016ASS
	 *    >. 2017 S/S : 2017SS
	 *    >. 2017 F/W : 2017FW
	 *    >. 2017 ALL : 2017ASS
	 *    >. 2018 S/S : 2018SS
	 *    >. 2018 F/W : 2018FW
	 *    >. 2018 ALL : 2018ASS
	 * 
	 * ㅁ. 연도가 도래 할때 마다 추가 해주어야 함.	 
	 */
	private String sesonCd;


	/**
	 * 대표 이미지 파일 명
	 * ㅁ. 저장된 이미지 파일의 명칭	 
	 */
	private String rprstImgFileNm;


	/**
	 * 대표 이미지 파일 URL
	 * ㅁ. 실제 저장된 이미지 파일의 위치화 파일 확장자까지를 포함	 
	 */
	private String rprstImgFileUrl;


	/**
	 * 대표 이미지 대체 내용
	 * 이미지 대체 텍스트	 
	 */
	private String rprstImgAltrtvCont;


	/**
	 * 대표 이미지2 파일 명
	 * ㅁ. 저장된 이미지 파일의 명칭	 
	 */
	private String rprstImg2FileNm;


	/**
	 * 대표 이미지2 파일 URL
	 * ㅁ. 실제 저장된 이미지 파일의 위치화 파일 확장자까지를 포함	 
	 */
	private String rprstImg2FileUrl;


	/**
	 * 대표 이미지2 대체 내용
	 * 이미지 대체 텍스트	 
	 */
	private String rprstImg2AltrtvCont;


	/**
	 * 등록자 ID
	 * 등록한 관리자 번호	 
	 */
	private String regtrId;


	/**
	 * 등록 일시	 
	 */
	private java.util.Date regDt;


	/**
	 * 수정자 ID
	 * 수정한 관리자 번호	 
	 */
	private String udterId;


	/**
	 * 수정 일시	 
	 */
	private java.util.Date udtDt;

	
}
